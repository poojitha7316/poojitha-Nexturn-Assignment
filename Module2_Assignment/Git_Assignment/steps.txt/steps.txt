# Step 1: Project Initialization
mkdir sample-project
cd sample-project
git init
git remote add origin <repository-URL>
New-Item -ItemType File .gitignore
git add .
git commit -m "Initial commit"
git branch -M main
git push -u origin main

# Step 2: Feature Addition
git checkout -b feature/update-readme
echo "# Sample Project" > README.md
echo "This project serves as a foundation for Git and GitHub workflow training." >> README.md
git add README.md
git commit -m "Add README.md with project introduction"
git push -u origin feature/update-readme

# Step 4: Merge Changes
git checkout main
git merge feature/update-readme
git push origin main

# Step 5: Branch Cleanup
git branch -d feature/update-readme
git push origin --delete feature/update-readme



1. How will you set up the project for version control and push it to GitHub?
 * Use git init to initialize the local repository.
 * Create a new repository on GitHub.
 * Link the local and remote repositories using git  remote add origin.
 * Commit and push the initial changes to the main branch.

2. What steps will you take to create, push, and manage branches effectively?
 * Create a new branch using git checkout -b <branch-name>.
 * Commit changes to the branch and push it using git push -u origin <branch-name>.
 * Create a pull request on GitHub for review and merging.

3. How will you ensure the changes in the feature branch are merged into the main branch?
 * Submit a pull request on GitHub for the feature branch.
 * Review the changes, merge the pull request, and pull the changes to the local main branch.

4. What commands will you use to clean up unused branches locally and remotely?
 * Locally: git branch -d <branch-name>
 * Remotely: git push origin --delete <branch-name>